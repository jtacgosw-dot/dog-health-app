name: iOS Build & TestFlight

on:
  workflow_dispatch:
  push:
    branches: [ main, 'devin/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14
    env:
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
      APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
      APPLE_PRIVATE_KEY_B64: ${{ secrets.APPLE_PRIVATE_KEY_B64 }}
      FASTLANE_DISABLE_COLORS: "1"
      LANG: en_US.UTF-8
      TZ: UTC
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        working-directory: ios-app

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with: 
        xcode-version: latest-stable

    - name: Build iOS app for simulator
      run: |
        cd ios-app
        xcodebuild -project DogHealthApp.xcodeproj \
          -scheme DogHealthApp \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone SE (3rd generation)' \
          build

    - name: Recreate App Store Connect API key files
      if: ${{ ((github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/devin/'))) || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'devin/'))) && env.APPLE_ISSUER_ID != '' }}
      run: |
        cd ios-app
        echo "Debug: APPLE_PRIVATE_KEY_B64 length: ${#APPLE_PRIVATE_KEY_B64}"
        if [ -z "$APPLE_PRIVATE_KEY_B64" ]; then
          echo "ERROR: APPLE_PRIVATE_KEY_B64 is empty or not set"
          exit 1
        fi
        mkdir -p .keys
        echo "$APPLE_PRIVATE_KEY_B64" | base64 --decode > .keys/AuthKey_${APPLE_KEY_ID}.p8
        cat > .keys/api_key.json <<EOF
        {
          "key_id": "${APPLE_KEY_ID}",
          "issuer_id": "${APPLE_ISSUER_ID}",
          "key": "$(python3 -c "
        import json
        with open('.keys/AuthKey_${APPLE_KEY_ID}.p8', 'r') as f:
            content = f.read()
        print(content.replace('\n', '\\n'))
        ")"
        }
        EOF

    - name: Unlock keychain
      if: ${{ ((github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/devin/'))) || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'devin/'))) && env.APPLE_ISSUER_ID != '' }}
      run: |
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings build.keychain

    - name: Verify API key works
      if: ${{ ((github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/devin/'))) || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'devin/'))) && env.APPLE_ISSUER_ID != '' }}
      run: |
        cd ios-app
        bundle exec fastlane run app_store_connect_api_key key_filepath:.keys/AuthKey_${APPLE_KEY_ID}.p8 key_id:${APPLE_KEY_ID} issuer_id:${APPLE_ISSUER_ID}

    - name: Build & Upload to TestFlight
      if: ${{ ((github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/devin/'))) || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'devin/'))) && env.APPLE_ISSUER_ID != '' }}
      run: |
        cd ios-app
        echo "Debug: Current working directory: $(pwd)"
        echo "Debug: Listing ios-app contents:"
        ls -la
        echo "Debug: Checking .keys directory:"
        ls -la .keys/ || echo ".keys directory not found"
        echo "Debug: Checking if AuthKey file exists:"
        ls -la .keys/AuthKey_${APPLE_KEY_ID}.p8 || echo "AuthKey file not found"
        bundle exec fastlane beta

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: |
          ios-app/DogHealthApp.xcarchive
          ios-app/*.ipa
        retention-days: 30
