name: iOS Build and TestFlight

on:
  push:
    branches: [ main, 'devin/*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_16.4.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Install dependencies
      run: |
        cd ios-app
        # Install any CocoaPods dependencies if needed
        # pod install
        
    - name: Build iOS app for simulator
      run: |
        cd ios-app
        xcodebuild -project DogHealthApp.xcodeproj \
          -scheme DogHealthApp \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          build
          
    - name: Build iOS app archive (requires signing)
      if: ${{ env.APPLE_CERTIFICATES_AVAILABLE == 'true' }}
      run: |
        cd ios-app
        # Install certificates and provisioning profiles
        echo "${{ secrets.APPLE_CERTIFICATE_P12 }}" | base64 --decode > certificate.p12
        echo "${{ secrets.APPLE_PROVISIONING_PROFILE }}" | base64 --decode > profile.mobileprovision
        
        # Import certificate to keychain
        security create-keychain -p "" build.keychain
        security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security list-keychains -s build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
        
        # Install provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Build archive
        xcodebuild -project DogHealthApp.xcodeproj \
          -scheme DogHealthApp \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath DogHealthApp.xcarchive \
          archive
          
    - name: Export IPA (requires Apple Developer credentials)
      if: ${{ env.APPLE_CERTIFICATES_AVAILABLE == 'true' }}
      run: |
        cd ios-app
        # Update ExportOptions.plist with team ID
        sed -i '' "s/{{ secrets.APPLE_TEAM_ID }}/${{ secrets.APPLE_TEAM_ID }}/g" ExportOptions.plist
        
        xcodebuild -exportArchive \
          -archivePath DogHealthApp.xcarchive \
          -exportPath . \
          -exportOptionsPlist ExportOptions.plist
          
    - name: Upload to TestFlight (requires Apple Developer credentials)
      if: ${{ env.APPLE_CERTIFICATES_AVAILABLE == 'true' }}
      run: |
        cd ios-app
        xcrun altool --upload-app \
          --type ios \
          --file DogHealthApp.ipa \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}"
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: |
          ios-app/DogHealthApp.xcarchive
          ios-app/*.ipa
        retention-days: 30
        
    env:
      APPLE_CERTIFICATES_AVAILABLE: 'false'  # Set to 'true' when credentials are configured
